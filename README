// //ErrorResponse = eiegne Fehler erzeugen mit Message + Statuscode
// //errorHandler = Fehler behandeln und an Client schicken
// //import axios from "axios";
// import pokemonSchema from "../validation/pokemonSchema.js";

// const getRandomPokemon = async (req, res) => {
// const id = Math.floor(Math.random() \* 151) + 1;

// const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);
// const data = response.data;

// const sprite =
// data.sprites.versions["generation-v"]["black-white"].animated.front_default;
// const cry = data.cries?.latest || data.cries?.legacy || null;

// const hp = data.stats.find((s) => s.stat.name === "hp")?.base_stat || 40;
// const type = data.types?.[0]?.type?.name || "normal";

// const pokemonData = {
// id: data.id,
// name: data.name,
// sprite,
// maxHp: hp,
// type,
// xp: 100,
// cry,
// };

// //Daten gültig → werden an das Frontend geschickt
// const validData = pokemonSchema.parse(pokemonData);

// res.json(validData);
// };

// export default getRandomPokemon;
